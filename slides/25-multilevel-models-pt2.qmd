---
title: "Fitting multilevel models"
author: "Prof. Maria Tackett"
date: "2022-11-30"
date-format: "MMM DD, YYYY"
footer: "[ðŸ”— Week 14](https://sta210-fa22.netlify.app/weeks/week-14.html)"
logo: "../images/logo.png"
format: 
  revealjs:
    theme: slides.scss
    multiplex: false
    transition: fade
    slide-number: true
    incremental: false 
    chalkboard: true
execute:
  freeze: auto
  echo: true
  warning: false
  message: false
knitr:
  opts_chunk: 
    R.options:      
    width: 200
editor_options: 
  chunk_output_type: console
---

```{r}
#| include: false

# figure options
knitr::opts_chunk$set(
  fig.width = 8, fig.asp = 0.618, out.width = "90%",
  fig.retina = 3, dpi = 300, fig.align = "center"
)

library(countdown)
library(tidyverse)
library(knitr)
library(tidymodels)
library(patchwork)
library(multilevelmod)
library(broom.mixed)
```

## Announcements

-   Due dates

    -   [Statistics experience](../hw/stats-experience.html) due Fri, Dec 09, 11:59pm
    -   Project written report due Fri, Dec 09, 11:59pm
    -   Team Feedback #2 due Tue, Dec 06, 11:59pm (check for email from Teammates)

-   Exam 02: Mon, Dec 05 (evening) - Thu, Dec 08, 12pm (noon)

    -   Exam 02 review on Mon Dec 05

    -   [Click here](https://duke.hosted.panopto.com/Panopto/Pages/Sessions/List.aspx?folderID=3abb0b6f-0db5-4d55-84f2-aefd0140874b) for lecture recordings - available until Dec 05, 11:59pm

-   See [Week 14](../weeks/week-14.html) activities

------------------------------------------------------------------------

## Learning goals

-   Understand how multilevel model can be used to take correlation into account
-   Interpret fixed effects of multilevel model
-   Fit multilevel model in R

## Data: Music performance anxiety

The data [`musicdata.csv`](data/musicdata.csv) come from the Sadler and Miller (2010) study of the emotional state of musicians before performances. The dataset contains information collected from 37 undergraduate music majors who completed the Positive Affect Negative Affect Schedule (PANAS), an instrument produces a measure of anxiety (negative affect) and a measure of happiness (positive affect). This analysis will focus on negative affect as a measure of performance anxiety.

## Data: Music performance anxiety

The primary variables we'll use are

-   **`na`**: negative affect score on PANAS (the response variable)
-   **`perform_type`**: type of performance (Solo, Large Ensemble, Small Ensemble)
    -   Create variable `large_ensemble`: 1 if large ensemble performance, 0 otherwise
-   **`instrument`**: type of instrument (Voice, Orchestral, Piano)
    -   Create variable `orchestra`: 1 if orchestral instrument, 0 otherwise

## Look at data

```{r}
#| echo: false 
music <- read_csv(here::here("slides", "data/musicdata.csv")) |>
  mutate(orchestra = if_else(instrument == "orchestral instrument", 1, 0), 
         large_ensemble = if_else(perform_type == "Large Ensemble", 1, 0))

music |>
  filter(id %in% c(1, 43)) |>
  group_by(id) |>
  slice(1:3) |>
  select(id, diary, large_ensemble, orchestra, na) |>
  ungroup() |>
  kable()
```

::: question
Draw the data structure, and add the Level One and Level Two observational units and variables.
:::

## Unviariate EDA

```{r echo = F}
p1 <- ggplot(data = music, aes(x = na)) + 
  geom_histogram(fill = "steelblue", color = "black", binwidth = 2) + 
  labs(x = "Individual negative affect", 
       title = "Negative affect scores")

p2 <- music |>
  group_by(id) |>
  summarise(mean_na = mean(na)) |>
  ungroup() |>
  ggplot(aes(x = mean_na)) + 
  geom_histogram(fill = "steelblue", color = "black", binwidth = 2) + 
  labs(x = "Mean negative affect", 
       title = "Mean negative affect scores", 
       subtitle = "by musician")

p1 + p2
```

## Bivariate EDA

```{r}
#| echo: false

p3 <- ggplot(data = music, aes(x = factor(large_ensemble), y = na)) + 
  geom_boxplot(color = "black", fill = "steelblue") +
  labs(x = "Large ensemble", 
       y = "Negative affect", 
       title = "Negative affect",
       subtitle = "by performance type")

p4 <- ggplot(data = music, aes(x = factor(orchestra), y = na)) + 
  geom_boxplot(color = "black", fill = "steelblue") +
  labs(x = "Orchestral instrument", 
       y = "Negative affect", 
       title = "Negative affect",
       subtitle = "by instrument")

p3 + p4
```

## Bivariate EDA

```{r}
#| echo: false

ggplot(data = music, aes(x = factor(large_ensemble), y = na)) + 
  geom_boxplot(color = "black", fill = "steelblue") +
  labs(x = "Large ensemble", 
       y = "Negative affect", 
       title = "Negative affect vs. performance",
       subtitle = "by musician") +
  facet_wrap(vars(id))
```

# Fitting the model

------------------------------------------------------------------------

## Questions we want to answer

The goal is to understand variability in performance anxiety (`na`) based on performance-level and musician-level characteristics. Specifically:

> What is the association between performance type (large ensemble or not) and performance anxiety? Does the association differ based on instrument type (orchestral or not)?

## Modeling workflow

We will fit the model in two parts:

`r emo::ji("one")` Fit a separate model for each musician understand the association between performance type and anxiety (Level One models).

`r emo::ji("two")` Then fit a system of models to predict the fitted coefficients in the Level One models based on instrument type (Level Two models).

::: question
-   How many Level One models will we fit?
-   How many Level Two models will we fit?
:::

## `r emo::ji("one")` Level One model

We'll start with the Level One model to understand the association between performance type and performance anxiety for the $i^{th}$ musician.\
$$na_{ij} = a_i + b_i ~ LargeEnsemble_{ij} + \epsilon_i, \hspace{5mm} \epsilon_{ij} \sim N(0,\sigma^2)$$

::: question
Why is it more meaningful to use performance type for the Level One model than instrument?
:::

. . .

For now, estimate $a_i$ and $b_i$ using least-squares regression.

## Level One model for one student

Below is partial data for observation #22

```{r echo = F}
music |>
  filter(id == 22) |>
  select(id, diary, large_ensemble, orchestra, na) |>
  slice(1:3, 13:15) |>
  kable()
```

## Level One model for musician 22 {.midi}

```{r}
id_22 <- music |>
  filter(id == 22)

linear_reg() |>
  set_engine("lm") |>
  fit(na ~ large_ensemble, data = id_22) |>
  tidy() |> kable(digits = 3)
```

## Application exercise

::: appex
ðŸ“‹ [AE 15: Introduction to Multilevel models](../ae/ae-15-multilevel-models.html)
:::

See Part 3: Level One Models to fit the Level One model for all 37 musicians.

## Level One model summaries

```{r echo = F}
# set up tibble for fitted values 

model_stats <- tibble(slopes = rep(0,37), 
               intercepts = rep(0,37), 
               r.squared = rep(0, 37))


ids <- music |> distinct(id) |> pull()

# counter to keep track of row number to store model_stats

count <- 1

for(i in ids){
  
id_data <- music |>
  filter(id == i)


level_one_model <- linear_reg() |>
  set_engine("lm") |>
  fit(na ~ large_ensemble, data = id_data) 

level_one_model_tidy <- tidy(level_one_model)

model_stats$slopes[count] <- level_one_model_tidy$estimate[2]
model_stats$intercepts[count] <- level_one_model_tidy$estimate[1]
model_stats$r.squared[count] <- glance(level_one_model)$r.squared


count = count + 1
}
```

```{r echo = F, fig.cap = "Recreated from BMLR Figure 8.9"}
p1 <- ggplot(data = model_stats, aes(x = intercepts)) + 
  geom_histogram(fill = "steelblue", color = "black", binwidth = 2) + 
  labs(x = "Fitted intercepts", 
      title  = "Intercepts", 
      subtitle = "from 37 musicians")

p2 <- ggplot(data = model_stats, aes(x = slopes)) + 
  geom_histogram(fill = "steelblue", color = "black", binwidth = 2) + 
  labs(x = "Fitted Slopes", 
      title  = "Slopes", 
      subtitle = "from 37 musicians")

p1 + p2
```

. . .

**Now let's consider if there is an association between the estimated slopes, estimated intercepts, and the type of instrument.**

## Level Two Model

The slope and intercept for the $i^{th}$ musician can be modeled as\
$$\begin{aligned}&a_i = \alpha_0 + \alpha_1 ~ Orchestra_i + u_i \\
&b_i = \beta_0 + \beta_1 ~ Orchestra_i + v_i\end{aligned}$$

::: callout-note
The response variable in the Level Two models are not observed outcomes but the (fitted) slope and intercept from each musician
:::

## Application exercise

::: appex
ðŸ“‹ [AE 15: Introduction to Multilevel models](../ae/ae-15-multilevel-models.html)
:::

See Part 4: Level Two Models.

## Estimated coefficients by instrument

```{r echo = F}

musicians <- music |>
  distinct(id, orchestra) |>
  bind_cols(model_stats)

p1 <- ggplot(data = musicians, aes(x = intercepts, y = factor(orchestra))) + 
  geom_boxplot(fill = "steelblue", color = "black") + 
  labs(x = "Fitted intercepts", 
       y = "Orchestra")

p2 <- ggplot(data = musicians, aes(x = slopes, y = factor(orchestra))) + 
  geom_boxplot(fill = "steelblue", color = "black") + 
  labs(x = "Fitted slopes", 
       y = "Orchestra")

p1 / p2
```

## Level Two model

**Model for intercepts**

```{r echo = F}
a <- lm(intercepts ~ orchestra, data = musicians) 
tidy(a) |>
  kable(digits = 3)
```

**Model for slopes**

```{r echo = F}
b <- lm(slopes ~ orchestra, data = musicians) 
tidy(b) |>
  kable(digits = 3)
```

## Writing out the models

**Level One**

$$\hat{na}_{ij}  = \hat{a}_i + \hat{b}_i ~ LargeEnsemble_{ij}$$

for each musician.

. . .

**Level Two**

```{=tex}
\begin{aligned}&\hat{a}_i = 16.283 + 1.411 ~ Orchestra_i \\
&\hat{b}_i = -0.771 - 1.406 ~ Orchestra_i\end{aligned}
```
## Composite model {.midi}

```{=tex}
\begin{aligned}\hat{na}_i &= 16.283 + 1.411 ~ Orchestra_i - 0.771 ~ LargeEnsemble_{ij} \\
&- 1.406 ~ Orchestra:LargeEnsemble_{ij}\end{aligned}
```
::: question
-   What is the predicted average performance anxiety before solos and small ensemble performances for vocalists and keyboardists? For those who play orchestral instruments?

-   What is the predicted average performance anxiety before large ensemble performances for those who play orchestral instruments?
:::

```{r}
countdown(minutes = 3, seconds= 0)
```

## Disadvantages to this approach

`r emo::ji("warning")` Weighs each musician the same regardless of number of diary entries

`r emo::ji("warning")` Drops subjects who have missing values for slope (7 individuals who didn't play a large ensemble performance)

`r emo::ji("warning")` Does not share strength effectively across individuals.

## Application exercise

::: appex
ðŸ“‹ [AE 15: Introduction to Multilevel models](../ae/ae-15-multilevel-models.html)
:::

See Part 5: Distribution of $R^2$ values.

# Unified approach to two-level modeling

------------------------------------------------------------------------

## Framework {.midi}

Let $Y_{ij}$ be the performance anxiety for the $i^{th}$ musician before performance $j$.

**Level One**

$$Y_{ij} = a_i + b_i ~ LargeEnsemble_{ij} + \epsilon_{ij}$$

**Level Two**

```{=tex}
\begin{aligned}&a_i = \alpha_0 + \alpha_1 ~ Orchestra_i+ u_i\\
&b_i = \beta_0 + \beta_1~Orchestra_i + v_i\end{aligned}
```
Coefficients are estimated using likelihood-based methods (instead of least squares) to address the previously mentioned disadvantages

## Composite model {.midi}

Plug in the equations for $a_i$ and $b_i$ to get the **composite model** $$\begin{aligned}Y_{ij} &= (\alpha_0 + \alpha_1 ~ Orchestra_i + \beta_0 ~ LargeEnsemble_{ij} \\ 
&+ \beta_1 ~ Orchestra_i:LargeEnsemble_{ij})\\
&+ (u_i + v_i ~ LargeEnsemble_{ij} + \epsilon_{ij})\end{aligned}$$

-   The **fixed effects** to estimate are $\alpha_0, \alpha_1, \beta_0, \beta_1$
-   The **error terms** are $u_i, v_i, \epsilon_{ij}$
    -   We will estimate variability in the error terms $\sigma_u, \sigma_v, \sigma_\epsilon$

. . .

::: callout-note
We no longer need to estimate $a_i$ and $b_i$ directly as we did earlier. They conceptually connect the Level One and Level Two models.
:::

## Error terms {.midi}

-   We generally assume that the error terms are normally distributed, e.g. error associated with each performance of a given musician is $\epsilon_{ij} \sim N(0, \sigma^2)$

-   For the Level Two models, the errors are

    -   $u_i$: deviation of musician $i$ from the mean performance anxiety before solos and small ensembles after accounting for the instrument
    -   $v_i$: deviance of musician $i$ from the mean difference in performance anxiety between large ensembles and other performance types after accounting for instrument

-   We will also estimate $\rho_{uv}$ to account for fact that $u_i$ (the intercepts) and $v_i$ (the slopes) are correlated for the $i^{th}$ musician

## Slopes vs intercepts by musician

```{r echo = F, fig.cap = "Recreated from Figure 8.11"}
musicians |>
  filter(!is.na(slopes)) |>
ggplot(aes(x = intercepts, y = slopes)) + 
  geom_point() + 
  geom_smooth(method = "lm") + 
  labs(x = "Fitted intercepts",
       y = "Fitted slopes", 
       title = "Fitted slopes and intercepts", 
       subtitle = paste0("r = ", round(cor(musicians |> filter(!is.na(slopes)) |> pull(intercepts), musicians |> filter(!is.na(slopes)) |> pull(slopes)),3)))
```

::: question
Describe what we learn about the association between the slopes and intercepts based on this plot.
:::

------------------------------------------------------------------------

## Distribution of Level Two errors

Use a **multivariate normal** distribution for the Level Two error terms $$\left[ \begin{array}{c}
            u_{i} \\ v_{i}
          \end{array}  \right] \sim N \left( \left[
          \begin{array}{c}
            0 \\ 0
          \end{array} \right], \left[
          \begin{array}{cc}
            \sigma_{u}^{2} & \rho_{uv}\sigma_{u}\sigma_v \\
            \rho_{uv}\sigma_{u}\sigma_v & \sigma_{v}^{2}
          \end{array} \right] \right)$$

where $\sigma^2_u$ and $\sigma^2_v$ are the variance of $u_i$'s and $v_i$'s respectively, and $\sigma_{uv} = \rho_{uv}\sigma_u\sigma_v$ is covariance between $u_i$ and $v_i$

-   What does it mean for $\rho_{uv} > 0$?
-   What does it mean for $\rho_{uv} < 0$?

------------------------------------------------------------------------

## Visualizing multivariate normal distribution

```{r, include=FALSE}
library(mnormt)
#Code for next plot
e0 <- seq(-8,8,length=51)  
e1 <- seq(-4,4,length=51)
xy <- expand.grid(e0,e1)

Sigma <- matrix(c(4,0,0,1),2,2)
Mu <- c(0,0)
z <- dmnorm(xy, Mu, Sigma)
zframe <- data.frame(xy, z)
density <- xy[z==max(z),]
con.1 <- ggplot(data = zframe, aes(x = Var1, y = Var2, z = z)) + 
geom_contour(stat = "contour", lineend = "butt", 
               linejoin = "round", linemitre = 1, 
               na.rm = FALSE, colour = "black") + 
  labs(x = "u", y = "v", title = "Mutlivariate normal density", 
       subtitle = "no correlation ") + 
  scale_y_continuous(limits = c(-5,5))

# Positive correlation
Sigma <- matrix(c(4,1.5,1.5,1),2,2)
Mu <- c(0,0)
z <- dmnorm(xy, Mu, Sigma)
zframe <- data.frame(xy, z)
density <- xy[z==max(z),]
con.2 <- ggplot(data = zframe, aes(x = Var1, y = Var2, z = z)) + 
  geom_contour(stat = "contour", lineend = "butt", 
               linejoin = "round", linemitre = 1, 
               na.rm = FALSE, colour = "black") + 
  labs(x = "u", y = "v", title = "Multivariate normal density", 
       subtitle = "positive correlation") + 
  scale_y_continuous(limits = c(-5,5))
```

```{r contour-boundary,fig.align="center",out.width="60%", fig.cap='Recreated from Figure 8.12',echo=FALSE, warning=FALSE}
con.1 + con.2
```

------------------------------------------------------------------------

## Fit the model in R

Fit multilevel model using **tidymodels** and the **multilevelmod** R packages. Display results using the `tidy()` function from the **broom.mixed** package.

```{r eval = F}
#| code-line-numbers: "1|2|3|6|7|8|9"

library(tidymodels)
library(multilevelmod)
library(broom.mixed)

music_fit <- 
  linear_reg() |>
  set_engine("lmer") |>
  fit(na ~ orchestra + large_ensemble +
        orchestra:large_ensemble + (large_ensemble|id),
      data = music)

tidy(music_fit) |> kable(digits = 3)
```

## Fit the model in R

```{r echo = F}

music <- music |>
  mutate(large_ensemble = factor(large_ensemble), 
         orchestra = factor(orchestra))

music_fit <- 
  linear_reg() |>
  set_engine("lmer") |>
  fit(na ~ orchestra + large_ensemble +
        orchestra:large_ensemble + (large_ensemble|id),
      data = music)

tidy(music_fit) |> kable(digits = 3)
```

## Final model

```{=tex}
\begin{aligned}\hat{na}_i &= 15.930 + 1.693 ~ Orchestra_i - 0.911 ~ LargeEnsemble_{ij} \\
&- 1.424 ~ Orchestra_i:LargeEnsemble_{ij} \\[5pt]
&\hat{\sigma}_{u} = 2.378 \hspace{20mm} \hat{\sigma}_{v} = 0.672 \hspace{20mm} \hat{\sigma}_{\epsilon} = 4.670 \\
&\hat{\rho}_{uv} = -0.635\end{aligned}
```
## Acknowledgements

The content in the slides is from - [BMLR: Chapter 7 - Correlated data](https://bookdown.org/roback/bookdown-BeyondMLR/ch-corrdata.html) - [BMLR: Chapter 8 - Introduction to Multilevel Models](https://bookdown.org/roback/bookdown-BeyondMLR/ch-multilevelintro.html)

-   Sadler, Michael E., and Christopher J. Miller. 2010. "Performance Anxiety: A Longitudinal Study of the Roles of Personality and Experience in Musicians." Social Psychological and Personality Science 1 (3): 280--87. http://dx.doi.org/10.1177/1948550610370492.
